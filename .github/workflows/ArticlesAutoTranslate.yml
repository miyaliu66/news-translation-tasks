name: Articles auto translate
run-name: ${{ github.event.label.name }} - ${{ github.event.issue.title }}
on:
  issues:
    types:
      - labeled

jobs:
  ArticlesAutoTranslate:
    runs-on: ubuntu-latest
    env:
      ACTIONS_RUNNER_DEBUG: true
    permissions:
      issues: write
      contents: write
    if: ${{ github.event.label.name == 'auto' }}
    steps:
      # Step 1: Checkout the repository
      - name: Checkout the repository
        uses: actions/checkout@v3

      # Step 2: Check if the issue body is empty
      - name: Check issue description
        if: ${{ !github.event.issue.body }}
        run: echo "Issue description is empty." 1>&2; exit 1;

      # Step 3: Extract language code from issue title
      - name: Extract language code
        id: extract-lang
        run: |
          LANG_CODE=$(echo "${{ github.event.issue.title }}" | sed -E 's/^\[([a-zA-Z]+)\].*/\1/')
          echo "::set-output name=lang::$LANG_CODE"

      # Step 4: Fetch webpage and convert to Markdown
      - name: Fetch webpage to Markdown
        id: fetch-markdown
        uses: freeCodeCamp/article-webpage-to-markdown-action@dev
        with:
          newsLink: '${{ github.event.issue.body }}'
          includeSelector: '.author-card-name,.post-content'
          ignoreSelector: '.ad-wrapper'
          skipSameArticleCheck: true
          skipIssueComment: true
          markDownFilePath: './articles/_raw/'
          githubToken: '${{ github.token }}'

      # Step 5: Prepare file for translation
      - name: Copy Markdown file for translation
        run: |
          mkdir -p ./articles/${{ steps.extract-lang.outputs.lang }}/
          cp -f ${{ steps.fetch-markdown.outputs.markdown_file_path }} ./articles/${{ steps.extract-lang.outputs.lang }}/

      # Step 6: Commit raw Markdown file to `main`
      - name: Commit raw Markdown
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: 'Save raw Markdown: ${{ github.event.issue.title }}'
          file_pattern: articles/**/*.md
          commit_user_name: PageToMarkdown Bot
          commit_user_email: PageToMarkdown-bot@freeCodeCamp.org

      # Step 7: Switch to `auto-translate` branch
      - name: Checkout auto-translate branch
        run: |
          git fetch origin auto-translate || git branch auto-translate
          git checkout auto-translate
          git pull origin auto-translate || true

      # Step 8: Translate Markdown
      - name: Translate Markdown
        uses: freeCodeCamp/articles-auto-translate-action@main
        with:
          with_issue_title: '${{ github.event.issue.title }}'
          with_issue_body: '${{ github.event.issue.body }}'
          with_label_name: '${{ github.event.label.name }}'
          with_github_token: '${{ github.token }}'
          with_orginal_markdown_file_path: ${{ steps.fetch-markdown.outputs.markdown_file_path }}
          with_task_fetch_to_save_path: './articles/_raw/'
          with_task_fetch_to_include_selector: '.author-card-name,.post-content'
          with_task_fetch_to_ignore_selector: '.ad-wrapper'
          with_task_translate_openai_api_key: ${{ secrets.OPENAI_API_KEY }}
          with_task_translate_to_save_path: './articles/${{ steps.extract-lang.outputs.lang }}/'

      # Step 9: Commit translated Markdown to `auto-translate`
      - name: Commit translated Markdown
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: 'Auto-translated: ${{ github.event.issue.title }}'
          file_pattern: articles/**/*.md
          commit_user_name: PageToMarkdown Bot
          commit_user_email: PageToMarkdown-bot@freeCodeCamp.org
